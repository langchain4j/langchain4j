name: Java CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  changed:
    runs-on: ubuntu-latest
    outputs:
      additional_mvn_args: ${{ steps.analyzer.test_options }}
    steps:
      - uses: actions/checkout@4
      # collect changed file group by module
      - uses: tj-actions/changed-files@v44
        id: filter
        with:
          # each module contained IT should list the dir and direct/indirect dependent module's dir in the files_yaml
          files_yaml: |
            anthropic:
              - 'langchain4j-anthropic/**'
              - 'langchain4j-core/**'
            local_ai:
              - 'langchain4j-local-ai/**'
              - 'langchain4j-open-ai/**'
              - 'langchain4j-core/**'
            milvus:
              - 'langchain4j-milvus/**'
              - 'langchain4j-core/**'
            mongodb_atlas:
              - 'langchain4j-mongodb-atlas/**'
              - 'langchain4j-core/**'
            ollama:
              - 'langchain4j-ollama/**'
              - 'langchain4j-core/**'
            vearch:
              - 'langchain4j-vearch/**'
              - 'langchain4j-core/**'
            vertex_ai_gemini:
              - 'langchain4j-vertex-ai-gemini/**'
              - 'langchain4j-core/**'
      # build test_options based on module changed and define output for step
      - id: analyzer
        run: |
          test_options=''
          [ ${{ steps.filter.outputs.anthropic_any_changed }} == 'true' ] && test_options+=' -DskipAnthropicITs'
          [ ${{ steps.filter.outputs.local_ai_any_changed }} == 'true' ] && test_options+=' -DskipLocalAiITs'
          [ ${{ steps.filter.outputs.milvus_any_changed }} == 'true' ] && test_options+=' -DskipMilvusITs'
          [ ${{ steps.filter.outputs.mongodb_atlas_any_changed }} == 'true' ] && test_options+=' -DskipMongoDbAtlasITs'
          [ ${{ steps.filter.outputs.ollama_any_changed }} == 'true' ] && test_options+=' -DskipOllamaITs'
          [ ${{ steps.filter.outputs.vearch_any_changed }} == 'true' ] && test_options+=' -DskipVearchITs'
          [ ${{ steps.filter.outputs.vertex_ai_gemini_any_changed }} == 'true' ] && test_options+=' -DskipVertexAiGeminiITs'
          [ -z ${test_options} ] && test_options='-DskipITs'
          echo "test_options=${test_options}" >> "$GITHUB_OUTPUT"
  java_build:
    needs:
      - changes
    strategy:
      matrix:
        java_version: [8, 11, 17, 21]
        include:
          - java_version: '8'
            included_modules: '-pl !code-execution-engines/langchain4j-code-execution-engine-graalvm-polyglot,!langchain4j-cassandra,!langchain4j-infinispan,!langchain4j-neo4j,!langchain4j-opensearch,!langchain4j-azure-ai-search'
          - java_version: '11'
            included_modules: '-pl !code-execution-engines/langchain4j-code-execution-engine-graalvm-polyglot,!langchain4j-infinispan,!langchain4j-neo4j'
          - java_version: '17'
            included_modules: '-pl !code-execution-engines/langchain4j-code-execution-engine-graalvm-polyglot'
          - java_version: '21'
            included_modules: ''
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java_version }}
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with JDK ${{ matrix.java_version }}
        run: mvn --batch-mode install ${{ needs.changes.outputs.additional_mvn_args }} ${{ matrix.included_modules }}

  # For checking some compliance things (require a recent JDK due to plugins so in a separate step)
  compliance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
        # Check we only rely on permissive licenses in the main parts of the library:
      - name: License Compliance
        run: mvn -P compliance org.honton.chas:license-maven-plugin:compliance

# TODO's
# - enable JDK 17 unit tests for langchain4j-code-execution-engine-graalvm-polyglot
# - setup integration tests
# - these require an openAI (and hugging face, etc) token
# - do so that they always run for commits on main
# - make the running be manually triggered for PRs (we don't want to burn through credits)
