package dev.langchain4j.model.googleai;

import static dev.langchain4j.model.googleai.PartsAndContentsMapper.GENERATED_IMAGES_KEY;

import dev.langchain4j.data.image.Image;
import dev.langchain4j.data.message.AiMessage;
import java.util.Collections;
import java.util.List;

/**
 * Helper class for accessing generated images from AiMessage attributes.
 * This provides a convenient way to extract images generated by Gemini's image generation models.
 */
public class GeneratedImageHelper {

    /**
     * Extracts generated images from an AiMessage.
     * These images are stored in the message attributes under the key "generated_images".
     *
     * @param aiMessage the AiMessage that may contain generated images
     * @return a list of generated images, or empty list if none found
     */
    @SuppressWarnings("unchecked")
    public static List<Image> getGeneratedImages(AiMessage aiMessage) {
        if (aiMessage == null || aiMessage.attributes() == null) {
            return Collections.emptyList();
        }

        Object images = aiMessage.attributes().get(GENERATED_IMAGES_KEY);
        if (images instanceof List<?>) {
            try {
                return (List<Image>) images;
            } catch (ClassCastException e) {
                return Collections.emptyList();
            }
        }

        return Collections.emptyList();
    }

    /**
     * Checks if an AiMessage contains generated images.
     *
     * @param aiMessage the AiMessage to check
     * @return true if the message contains generated images, false otherwise
     */
    public static boolean hasGeneratedImages(AiMessage aiMessage) {
        return !getGeneratedImages(aiMessage).isEmpty();
    }
}
